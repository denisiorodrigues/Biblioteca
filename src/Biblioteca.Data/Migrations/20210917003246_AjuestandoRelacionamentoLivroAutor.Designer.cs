// <auto-generated />
using System;
using Biblioteca.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Biblioteca.Data.Migrations
{
    [DbContext(typeof(BibliotecaContext))]
    [Migration("20210917003246_AjuestandoRelacionamentoLivroAutor")]
    partial class AjuestandoRelacionamentoLivroAutor
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("Biblioteca.Business.Models.Aluno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("Biblioteca.Business.Models.Autor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("Biblioteca.Business.Models.Emprestimo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("Devolucao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Devolvido")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("LivroId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("LivroId");

                    b.ToTable("Emprestimos");
                });

            modelBuilder.Entity("Biblioteca.Business.Models.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId")
                        .IsUnique();

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("Biblioteca.Business.Models.Escrito", b =>
                {
                    b.Property<Guid>("AutorId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("LivroId")
                        .HasColumnType("TEXT");

                    b.HasKey("AutorId", "LivroId");

                    b.HasIndex("LivroId");

                    b.ToTable("Escritos");
                });

            modelBuilder.Entity("Biblioteca.Business.Models.Livro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Exemplares")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Imagem")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Publicado")
                        .HasColumnType("TEXT");

                    b.Property<string>("Resumo")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<int>("Situacao")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Livros");
                });

            modelBuilder.Entity("Biblioteca.Business.Models.Emprestimo", b =>
                {
                    b.HasOne("Biblioteca.Business.Models.Aluno", "Aluno")
                        .WithMany("Emprestimos")
                        .HasForeignKey("AlunoId")
                        .IsRequired();

                    b.HasOne("Biblioteca.Business.Models.Livro", "Livro")
                        .WithMany("Emprestimos")
                        .HasForeignKey("LivroId")
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("Biblioteca.Business.Models.Endereco", b =>
                {
                    b.HasOne("Biblioteca.Business.Models.Aluno", "Aluno")
                        .WithOne("Endereco")
                        .HasForeignKey("Biblioteca.Business.Models.Endereco", "AlunoId")
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("Biblioteca.Business.Models.Escrito", b =>
                {
                    b.HasOne("Biblioteca.Business.Models.Autor", "Autor")
                        .WithMany("Livros")
                        .HasForeignKey("AutorId")
                        .IsRequired();

                    b.HasOne("Biblioteca.Business.Models.Livro", "Livro")
                        .WithMany("Autores")
                        .HasForeignKey("LivroId")
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("Biblioteca.Business.Models.Aluno", b =>
                {
                    b.Navigation("Emprestimos");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Biblioteca.Business.Models.Autor", b =>
                {
                    b.Navigation("Livros");
                });

            modelBuilder.Entity("Biblioteca.Business.Models.Livro", b =>
                {
                    b.Navigation("Autores");

                    b.Navigation("Emprestimos");
                });
#pragma warning restore 612, 618
        }
    }
}
